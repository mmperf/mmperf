cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
project(mmperf C CXX)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/cmake/")
include(common)

include(ExternalProject)

if(NOT DEFINED MLIR_SOURCE)
  set(MLIR_SOURCE ${CMAKE_SOURCE_DIR}/external/llvm-project/llvm)
endif()
if(NOT DEFINED MLIR_BUILD)
  set(MLIR_BUILD ${CMAKE_BINARY_DIR}/mlir)
endif()
set(RUY_SOURCE ../external/ruy)
set(CPUINFO_SOURCE ../external/cpuinfo)

set(CPUINFO_BUILD_BENCHMARKS OFF)
set(CPUINFO_BUILD_MOCK_TESTS OFF)
set(CPUINFO_BUILD_UNIT_TESTS OFF)
set(CPUINFO_INSTALL ${CMAKE_BINARY_DIR}/cpuinfo-install)
ExternalProject_Add(cpuinfo
  PREFIX ${CMAKE_BINARY_DIR}/cpuinfo
  SOURCE_DIR ${CPUINFO_SOURCE}
  BINARY_DIR ${CPUINFO_BUILD}
  INSTALL_DIR ${CPUINFO_INSTALL}
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DCPUINFO_BUILD_BENCHMARKS=OFF
    -DCPUINFO_BUILD_MOCK_TESTS=OFF
    -DCPUINFO_BUILD_UNIT_TESTS=OFF
)

set(MATMUL_DEPS "")
if(${USE_MLIR} STREQUAL "ON")
find_package(Git REQUIRED)
set(MLIR_INSTALL ${CMAKE_BINARY_DIR}/mlir-install)
ExternalProject_Add(mlir
  PREFIX ${CMAKE_BINARY_DIR}/mlir
  SOURCE_DIR ${MLIR_SOURCE}
  BINARY_DIR ${MLIR_BUILD}
  INSTALL_DIR ${MLIR_INSTALL}
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DLLVM_BUILD_LLVM_DYLIB:BOOL=OFF
    -DLLVM_LINK_LLVM_DYLIB:BOOL=OFF
    -DLLVM_INSTALL_UTILS:BOOL=ON
    -DLLVM_TARGETS_TO_BUILD:STRING=X86;AArch64
    -DLLVM_ENABLE_PROJECTS:STRING=mlir
    -DLLVM_INCLUDE_TOOLS:BOOL=ON
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DLLVM_ENABLE_ASSERTIONS:BOOL=ON
    -DLLVM_ENABLE_RTTI:BOOL=ON
)
list(APPEND MATMUL_DEPS mlir)
endif()

if(${USE_HALIDE} STREQUAL "ON")
find_package(LLVM REQUIRED)
set(HALIDE_SOURCE ${CMAKE_SOURCE_DIR}/external/Halide)
set(HALIDE_BUILD ${CMAKE_BINARY_DIR}/halide)
set(HALIDE_INSTALL ${CMAKE_BINARY_DIR}/halide-install)
ExternalProject_Add(halide
  PREFIX ${CMAKE_BINARY_DIR}/halide
  SOURCE_DIR ${HALIDE_SOURCE}
  BINARY_DIR ${HALIDE_BUILD}
  INSTALL_DIR ${HALIDE_INSTALL}
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DTARGET_WEBASSEMBLY:BOOL=OFF
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DWITH_PYTHON_BINDINGS=OFF
)
list(APPEND MATMUL_DEPS halide)
endif()

if(${USE_TVM} STREQUAL "ON")
set(TVM_SOURCE ${CMAKE_SOURCE_DIR}/external/tvm)
set(TVM_BUILD ${CMAKE_BINARY_DIR}/tvm)
set(TVM_INSTALL ${CMAKE_BINARY_DIR}/tvm-install)
option(TVM_ENABLE_CUDA "Enable CUDA in TVM" OFF)
option(TVM_ENABLE_ROCM "Enable ROCM in TVM" OFF)
option(TVM_ENABLE_METAL "Enable METAL in TVM" OFF)
ExternalProject_Add(tvm
  PREFIX ${CMAKE_BINARY_DIR}/tvm
  SOURCE_DIR ${TVM_SOURCE}
  BINARY_DIR ${TVM_BUILD}
  INSTALL_DIR ${TVM_INSTALL}
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DUSE_CUDA=${TVM_ENABLE_CUDA}
    -DUSE_ROCM=${TVM_ENABLE_ROCM}
    -DUSE_METAL=${TVM_ENABLE_METAL}
    -DUSE_RPC:BOOL=ON
    -DUSE_THREADS:BOOL=OFF
    -DUSE_LLVM:BOOL=ON
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
)
list(APPEND MATMUL_DEPS tvm)
endif()

set(MATMUL_CMAKE_ARGS "")
foreach(var IN LISTS VARS_TO_COPY)
    list(APPEND MATMUL_CMAKE_ARGS -D${var}=${${var}})
endforeach()

if(${USE_IREE} STREQUAL "ON")
set(IREE_SOURCE ${CMAKE_SOURCE_DIR}/external/iree)
ExternalProject_Add(matmul-iree
  PREFIX ${CMAKE_BINARY_DIR}/matmul-iree
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/matmul-iree
  BINARY_DIR ${CMAKE_BINARY_DIR}/matmul-iree
  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Skipping install step."
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON
    -DIREE_SOURCE=${IREE_SOURCE}
    ${MATMUL_CMAKE_ARGS}
)
endif()

ExternalProject_Add(matmul
  DEPENDS ${MATMUL_DEPS}
  PREFIX ${CMAKE_BINARY_DIR}/matmul
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/matmul
  BINARY_DIR ${CMAKE_BINARY_DIR}/matmul
  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Skipping install step."
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DMLIR_DIR=${MLIR_INSTALL}/lib/cmake/mlir
    -DMLIR_BUILD=${MLIR_BUILD}
    -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
    -DMKL_DIR=${MKL_DIR}
    -DHALIDE_DIR=${HALIDE_INSTALL}
    -DBLASFEO_DIR=${BLASFEO_DIR}
    -DBLIS_DIR=${BLIS_DIR}
    -DRUY_SOURCE=${RUY_SOURCE}
    -DTVM_LIB_DIR=${TVM_LIB_DIR}
    -DTVM_ENABLE_CUDA=${TVM_ENABLE_CUDA}
    -DTVM_ENABLE_ROCM=${TVM_ENABLE_ROCM}
    -DTVM_ENABLE_METAL=${TVM_ENABLE_METAL}
    ${MATMUL_CMAKE_ARGS}
)
